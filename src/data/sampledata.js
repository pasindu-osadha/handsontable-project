
export const getsampledata = () => {
    
    let dataArray=[];

    for(let i=0;i<500;i++){
        let subArry =[];
        
        subArry[0] =  Math.random().toString(36).substring(2,8);
        for(let j =1;j<9;j++){
            subArry[j] = Math.random().toFixed(2);
        }
        
        dataArray.push(subArry);
    }

    return dataArray;

    const data = [
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],
        ["B", 0.35, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.2],
        ["C", 0.5, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.3],
        ["A", 0.25, 0.25, 0.5, 0.2, 0.2, 0.2, 0.2, 0.5],

    ];

  
}
